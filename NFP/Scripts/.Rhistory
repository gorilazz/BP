getwd()
setwd(dir='../Git//Predictions//NFP//Scripts')
source('processFeatures.R')
source('processFeatures.R')
names(Features_all)
names(Features_Full)
rawData = '../Features/201412/All_True_DaysBack_7_Features.txt';
parsedData = '../Features/201412/DaysBack_7_Features_All_candiate_seperated_Absolute';
Raw_Features = read.csv(file=rawData,sep='\t');
names = names(Raw_Features);
names[1] = 'candidate';
colnames(Raw_Features) = names;
Features_all = subset(Raw_Features,candidate=='all',select=-c(candidate));
Features_allold = subset(Raw_Features,candidate=='all old',select=-c(candidate));
Features_opening = subset(Raw_Features,candidate=='job opening',select=-c(candidate));
Features_posting = subset(Raw_Features,candidate=='job posting',select=-c(candidate));
Features_opportunity = subset(Raw_Features,candidate=='job opportunity',select=-c(candidate));
Features_hiring = subset(Raw_Features,candidate=='we are hiring',select=-c(candidate));
Features_hashtags = subset(Raw_Features,candidate=='hashtags',select=-c(candidate));
names = names(Features_all);
names = paste(names,'_all',sep='');
names[1]='MonthId';
colnames(Features_all)<-names;
names = names(Features_allold);
names = paste(names,'_allold',sep='');
names[1]='MonthId';
colnames(Features_allold)<-names;
names = names(Features_opening);
names = paste(names,'_opening',sep='');
names[1]='MonthId';
colnames(Features_opening)<-names;
names = names(Features_posting);
names = paste(names,'_posting',sep='');
names[1]='MonthId';
colnames(Features_posting)<-names;
names = names(Features_opportunity);
names = paste(names,'_opportunity',sep='');
names[1]='MonthId';
colnames(Features_opportunity)<-names;
names = names(Features_hiring);
names = paste(names,'_hiring',sep='');
names[1]='MonthId';
colnames(Features_hiring)<-names;
names = names(Features_hashtags);
names = paste(names,'_hashtags',sep='');
names[1]='MonthId';
colnames(Features_hashtags)<-names;
Features_Full = join_all(list(Features_all,Features_allold,Features_opening,Features_posting,Features_opportunity,Features_hiring,Features_hashtags),by='MonthId',type='full');
Features_Full = Features_Full[2:ncol(Features_Full)];
names(Features_Full)
rawData = '../Features/201412/All_True_DaysBack_7_Features.txt';
parsedData = '../Features/201412/DaysBack_7_Features_All_candiate_seperated_Absolute';
Raw_Features = read.csv(file=rawData,sep='\t');
names = names(Raw_Features);
names[1] = 'candidate';
colnames(Raw_Features) = names;
Features_all = subset(Raw_Features,candidate=='all',select=-c(candidate));
Features_allold = subset(Raw_Features,candidate=='all old',select=-c(candidate));
Features_opening = subset(Raw_Features,candidate=='job opening',select=-c(candidate));
Features_posting = subset(Raw_Features,candidate=='job posting',select=-c(candidate));
Features_opportunity = subset(Raw_Features,candidate=='job opportunity',select=-c(candidate));
Features_hiring = subset(Raw_Features,candidate=='we are hiring',select=-c(candidate));
Features_hashtags = subset(Raw_Features,candidate=='hashtags',select=-c(candidate));
names = names(Features_all);
names = paste(names,'_all',sep='');
names[1]='MonthId';
colnames(Features_all)<-names;
names = names(Features_allold);
names = paste(names,'_allold',sep='');
names[1]='MonthId';
colnames(Features_allold)<-names;
names = names(Features_opening);
names = paste(names,'_opening',sep='');
names[1]='MonthId';
colnames(Features_opening)<-names;
names = names(Features_posting);
names = paste(names,'_posting',sep='');
names[1]='MonthId';
colnames(Features_posting)<-names;
names = names(Features_opportunity);
names = paste(names,'_opportunity',sep='');
names[1]='MonthId';
colnames(Features_opportunity)<-names;
names = names(Features_hiring);
names = paste(names,'_hiring',sep='');
names[1]='MonthId';
colnames(Features_hiring)<-names;
names = names(Features_hashtags);
names = paste(names,'_hashtags',sep='');
names[1]='MonthId';
colnames(Features_hashtags)<-names;
Features_Full = join_all(list(Features_all,Features_allold,Features_opening,Features_posting,Features_opportunity,Features_hiring,Features_hashtags),by='MonthId',type='full');
# Features_Full = Features_Full[2:ncol(Features_Full)];
write.csv(Features_Full, file=paste(parsedData,'.csv',sep=''));
rawData = '../Features/201412/All_True_DaysBack_7_Features.txt';
parsedData = '../Features/201412/DaysBack_7_Features_All_candiate_seperated_Absolute';
Raw_Features = read.csv(file=rawData,sep='\t');
names = names(Raw_Features);
names[1] = 'candidate';
colnames(Raw_Features) = names;
Features_all = subset(Raw_Features,candidate=='all',select=-c(candidate));
Features_allold = subset(Raw_Features,candidate=='all old',select=-c(candidate));
Features_opening = subset(Raw_Features,candidate=='job opening',select=-c(candidate));
Features_posting = subset(Raw_Features,candidate=='job posting',select=-c(candidate));
Features_opportunity = subset(Raw_Features,candidate=='job opportunity',select=-c(candidate));
Features_hiring = subset(Raw_Features,candidate=='we are hiring',select=-c(candidate));
Features_hashtags = subset(Raw_Features,candidate=='hashtags',select=-c(candidate));
names = names(Features_all);
names = paste(names,'_all',sep='');
names[1]='MonthId';
colnames(Features_all)<-names;
names = names(Features_allold);
names = paste(names,'_allold',sep='');
names[1]='MonthId';
colnames(Features_allold)<-names;
names = names(Features_opening);
names = paste(names,'_opening',sep='');
names[1]='MonthId';
colnames(Features_opening)<-names;
names = names(Features_posting);
names = paste(names,'_posting',sep='');
names[1]='MonthId';
colnames(Features_posting)<-names;
names = names(Features_opportunity);
names = paste(names,'_opportunity',sep='');
names[1]='MonthId';
colnames(Features_opportunity)<-names;
names = names(Features_hiring);
names = paste(names,'_hiring',sep='');
names[1]='MonthId';
colnames(Features_hiring)<-names;
names = names(Features_hashtags);
names = paste(names,'_hashtags',sep='');
names[1]='MonthId';
colnames(Features_hashtags)<-names;
Features_Full = join_all(list(Features_all,Features_allold,Features_opening,Features_posting,Features_opportunity,Features_hiring,Features_hashtags),by='MonthId',type='full');
Features_Full = Features_Full[2:ncol(Features_Full)];
write.csv(Features_Full, file=paste(parsedData,'.csv',sep=''));
rawData = '../Features/201412/All_True_DaysBack_7_Features.txt';
parsedData = '../Features/201412/DaysBack_7_Features_All_candiate_seperated_Absolute';
Raw_Features = read.csv(file=rawData,sep='\t');
names = names(Raw_Features);
names[1] = 'candidate';
colnames(Raw_Features) = names;
Features_all = subset(Raw_Features,candidate=='all',select=-c(candidate));
Features_allold = subset(Raw_Features,candidate=='all old',select=-c(candidate));
Features_opening = subset(Raw_Features,candidate=='job opening',select=-c(candidate));
Features_posting = subset(Raw_Features,candidate=='job posting',select=-c(candidate));
Features_opportunity = subset(Raw_Features,candidate=='job opportunity',select=-c(candidate));
Features_hiring = subset(Raw_Features,candidate=='we are hiring',select=-c(candidate));
Features_hashtags = subset(Raw_Features,candidate=='hashtags',select=-c(candidate));
names = names(Features_all);
names = paste(names,'_all',sep='');
names[1]='MonthId';
colnames(Features_all)<-names;
names = names(Features_allold);
names = paste(names,'_allold',sep='');
names[1]='MonthId';
colnames(Features_allold)<-names;
names = names(Features_opening);
names = paste(names,'_opening',sep='');
names[1]='MonthId';
colnames(Features_opening)<-names;
names = names(Features_posting);
names = paste(names,'_posting',sep='');
names[1]='MonthId';
colnames(Features_posting)<-names;
names = names(Features_opportunity);
names = paste(names,'_opportunity',sep='');
names[1]='MonthId';
colnames(Features_opportunity)<-names;
names = names(Features_hiring);
names = paste(names,'_hiring',sep='');
names[1]='MonthId';
colnames(Features_hiring)<-names;
names = names(Features_hashtags);
names = paste(names,'_hashtags',sep='');
names[1]='MonthId';
colnames(Features_hashtags)<-names;
Features_Full = join_all(list(Features_all,Features_allold,Features_opening,Features_posting,Features_opportunity,Features_hiring,Features_hashtags),by='MonthId',type='full');
# Features_Full = Features_Full[2:ncol(Features_Full)];
write.csv(Features_Full, file=paste(parsedData,'.csv',sep=''), row.names=F);
source('processFeatures.R')
source('processFeatures.R')
as.num('201401')
as.number('201401')
strtoi('201401')
a='123'
strtoi(a)
1&&2
Features_A = subset(Features_A, strtoi(MonthId)>=strtoi(startMonth)&&strtoi(MonthId)<=strtoi(endMonth))
Features_A = subset(Features_A, strtoi(Features_A$MonthId)>=strtoi(startMonth)&&strtoi(Features_A$MonthId)<=strtoi(endMonth))
startMonth = '201101';
endMonth = '201412';
Features_A = subset(Features_A, strtoi(Features_A$MonthId)>=strtoi(startMonth)&&strtoi(Features_A$MonthId)<=strtoi(endMonth))
Features_A
rawData = '../Features/201412/All_True_DaysBack_7_Features.txt';
parsedData = '../Features/201412/DaysBack_7_Features_All_candiate_seperated_Absolute';
startMonth = '201101';
endMonth = '201412';
Raw_Features = read.csv(file=rawData,sep='\t');
names = names(Raw_Features);
names[1] = 'candidate';
colnames(Raw_Features) = names;
Features_all = subset(Raw_Features,candidate=='all',select=-c(candidate));
Features_allold = subset(Raw_Features,candidate=='all old',select=-c(candidate));
Features_opening = subset(Raw_Features,candidate=='job opening',select=-c(candidate));
Features_posting = subset(Raw_Features,candidate=='job posting',select=-c(candidate));
Features_opportunity = subset(Raw_Features,candidate=='job opportunity',select=-c(candidate));
Features_hiring = subset(Raw_Features,candidate=='we are hiring',select=-c(candidate));
Features_hashtags = subset(Raw_Features,candidate=='hashtags',select=-c(candidate));
names = names(Features_all);
names = paste(names,'_all',sep='');
names[1]='MonthId';
colnames(Features_all)<-names;
names = names(Features_allold);
names = paste(names,'_allold',sep='');
names[1]='MonthId';
colnames(Features_allold)<-names;
names = names(Features_opening);
names = paste(names,'_opening',sep='');
names[1]='MonthId';
colnames(Features_opening)<-names;
names = names(Features_posting);
names = paste(names,'_posting',sep='');
names[1]='MonthId';
colnames(Features_posting)<-names;
names = names(Features_opportunity);
names = paste(names,'_opportunity',sep='');
names[1]='MonthId';
colnames(Features_opportunity)<-names;
names = names(Features_hiring);
names = paste(names,'_hiring',sep='');
names[1]='MonthId';
colnames(Features_hiring)<-names;
names = names(Features_hashtags);
names = paste(names,'_hashtags',sep='');
names[1]='MonthId';
colnames(Features_hashtags)<-names;
Features_A = join_all(list(Features_all,Features_allold,Features_opening,Features_posting,Features_opportunity,Features_hiring,Features_hashtags),by='MonthId',type='full');
Features_A
View(Features_A)
View(Features_A)
strtoi(Features_A$MonthId)
strtoi(Features_A$MonthId)>=strtoi('201101')
strtoi(Features_A$MonthId)>=strtoi('201101') && strtoi(Features_A$MonthId)<=strtoi('201412')
strtoi(Features_A$MonthId)<=strtoi('201412')
Features_A = subset(Features_A, strtoi(Features_A$MonthId)>=strtoi(startMonth))
nrow(Features_A)
Features_A = subset(Features_A, strtoi(Features_A$MonthId)<=strtoi(endMonth))
nrow(Features_A)
source('processFeatures.R')
source('processFeatures.R')
prev = Features_A[8,];
current = Features_A[9,];
current
names(Features_A)
rawData = '../Features/201412/All_True_DaysBack_7_Features.txt';
parsedData = '../Features/201412/DaysBack_7_Features_All_candiate_seperated_Absolute';
startMonth = '201101';
endMonth = '201412';
Raw_Features = read.csv(file=rawData,sep='\t');
names = names(Raw_Features);
names[1] = 'candidate';
colnames(Raw_Features) = names;
Features_all = subset(Raw_Features,candidate=='all',select=-c(candidate));
Features_allold = subset(Raw_Features,candidate=='all old',select=-c(candidate));
Features_opening = subset(Raw_Features,candidate=='job opening',select=-c(candidate));
Features_posting = subset(Raw_Features,candidate=='job posting',select=-c(candidate));
Features_opportunity = subset(Raw_Features,candidate=='job opportunity',select=-c(candidate));
Features_hiring = subset(Raw_Features,candidate=='we are hiring',select=-c(candidate));
Features_hashtags = subset(Raw_Features,candidate=='hashtags',select=-c(candidate));
names = names(Features_all);
names = paste(names,'_all',sep='');
names[1]='MonthId';
colnames(Features_all)<-names;
names = names(Features_allold);
names = paste(names,'_allold',sep='');
names[1]='MonthId';
colnames(Features_allold)<-names;
names = names(Features_opening);
names = paste(names,'_opening',sep='');
names[1]='MonthId';
colnames(Features_opening)<-names;
names = names(Features_posting);
names = paste(names,'_posting',sep='');
names[1]='MonthId';
colnames(Features_posting)<-names;
names = names(Features_opportunity);
names = paste(names,'_opportunity',sep='');
names[1]='MonthId';
colnames(Features_opportunity)<-names;
names = names(Features_hiring);
names = paste(names,'_hiring',sep='');
names[1]='MonthId';
colnames(Features_hiring)<-names;
names = names(Features_hashtags);
names = paste(names,'_hashtags',sep='');
names[1]='MonthId';
colnames(Features_hashtags)<-names;
Features_A = join_all(list(Features_all,Features_allold,Features_opening,Features_posting,Features_opportunity,Features_hiring,Features_hashtags),by='MonthId',type='full');
Features_A = subset(Features_A, strtoi(Features_A$MonthId)>=strtoi(startMonth))
Features_A = subset(Features_A, strtoi(Features_A$MonthId)<=strtoi(endMonth))
# Features_Full = Features_Full[2:ncol(Features_Full)];
write.csv(Features_A, file=paste(parsedData,'.csv',sep=''), row.names=F);
output_path_d = paste(parsedData,'Delta.csv',sep='');
output_path_f = paste(input_paths[i],'Full.csv',sep='');
Features_D = data.frame();
names(Features_A)
i=2
prev = Features_A[i-1,];
current = Features_A[i,];
prev
current
header = current[2];
header
Features_A[1,]
source('processFeatures.R')
nrow(Features_A)
nrow(Features_D)
Features_Full = join_all(list(Features_A,Features_D),by='Date',type='full');
nrow(Features_Full)
View(Features_Full)
View(Features_Full)
source('processFeatures.R')
?join_all
source('processFeatures.R')
source('getPrediction_SelectedCombo.R')
rm(list=ls())
source('getPrediction_SelectedCombo.R')
path_outPrediction
source('getPrediction_SelectedCombo.R')
featuresFullCombos
featureFullCombos
featureFull$IJC
featureFull$Consensus1
featureFull$NumVerifiedTweets_Week2_opportunity_AbsoluteDelta
featureFull$NumPopularTweets_Week1_posting_AbsoluteDelta
featureFull$NumPopularTweets_Week2_all_AbsoluteDelta
featureFull$NumVerifiedTweets_Week1_posting_AbsoluteDelta
featureFull$NumVerifiedTweets_Month1_all_AbsoluteDelta
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('processFeatures.R')
source('getPrediction_SelectedCombo.R')
featureFull$NumVerifiedTweets_Week2_opportunity_AbsoluteDelta
featureFull$NumPopularTweets_Week1_posting_AbsoluteDelta
featureFull$NumVerifiedTweets_Week1_posting_AbsoluteDelta
featureFull$NumVerifiedTweets_Month1_all_AbsoluteDelta
source('StrategySimulation_SelectedCombo.R')
featureFull$COnsensus
featureFull$Consensus
source('processFeatures.R')
source('getPrediction_SelectedCombo.R')
source('StrategySimulation_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('StrategySimulation_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('StrategySimulation_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('StrategySimulation_SelectedCombo.R')
source('learning_CV.R')
length(featureSocialCombos)
length(featureConsensusCombos)
source('learning_CV.R')
for(type in aggregationType)
{
path_outMetric_type = gsub(".csv", paste(paste("_",type,sep=""),".csv",sep=""), path_outMetric);
write.csv(metricList[[type]], file = path_outMetric_type);
}
source('learning_CV.R')
a = [1]
a = c(1)
rep(a, 40)
a = False
a = false
a = FALSE
x = sample(1:10, size=10, replace=F)
x
x[1:]
x[1:end]
x[1:end(x)]
x[1:10]
x[-1]
x[0]
x[-1:2]
x[-(1:2)]
source('learning_CV.R')
source('learning_CV.R')
a = list(c(1,2),c(2,3))
a
nrow(a)
length(a)
rm(list=ls())
source('learning_CV.R')
testing_sets = GenerateTesting_CV(40,10);
testing_sets
num_rows=40
x = sample(1:num_rows, size=num_rows, replace=F);
x
pos = 1
pos += 1
i = 1
cur = x[((i-1)*num_folds+1):(i*num_folds)];
num_folds=10
bucket_size = floor(num_rows/num_folds);
bucket_size
cur = x[((i-1)*bucket_size+1):(i*bucket_size)];
cur
result=list()
source('learning_CV.R')
source('getPrediction_SelectedCombo.R')
source('StrategySimulation_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('StrategySimulation_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('StrategySimulation_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('getPrediction_SelectedCombo.R')
source('StrategySimulation_SelectedCombo.R')
source('learning_CV.R')
source('learning_CV.R')
for(type in aggregationType)
{
path_outMetric_type = gsub(".csv", paste(paste("_",type,sep=""),".csv",sep=""), path_outMetric);
write.csv(metricList[[type]], file = path_outMetric_type);
}
names(featureFull)
a = namesFeatureFull[-c(1,2)]
a = names(FeatureFull)[-c(1,2)]
a = names(featureFull)[-c(1,2)]
a
a = c('a','b','c')
b = c('b')
a = a[! a%in%b]
a
which(IJCFull$Date==data_end)
which.min(IJCFull$Date)
which.min(metricList[['mean']]$L1)
metricList[['mean']]
typepf(metricList[[mean]])
typeof(metricList[[mean]])
typeof(metricList[['mean']])
nrow(metricList[['mean']])
metricList[['mean']][,10]
which.min(metricList[['mean']][,3])
metricList[['mean']][20148,3]
names(metricList[['mean']])
source('forwardFeatureSelection.R')
source('forwardFeatureSelection.R')
candidate
candidate[,8]
nrow(candidate)
length(candidate)
candidate[8]
metric
metric[,2]
metric[,1]
nrow(metric)
nrow(candidate)>1
length(metric)
length(candidate)
size(candidate)
matrix(candidate)
source('forwardFeatureSelection.R')
nrow(candidate)
nrow(candidate)==NULL
source('forwardFeatureSelection.R')
bestCombo
source('forwardFeatureSelection.R')
bestCombo
source('forwardFeatureSelection.R')
selectedFeatureNames
typeof(selectedFeatureNames)
strsplit(bestCombo,'[+]')
as.vector(strsplit(bestCombo,'[+]'))
source('forwardFeatureSelection.R')
selectedFeatureNames
strsplit('a'+'b'+'c',"[+]")
strsplit('a+b+c',"[+]")
source('forwardFeatureSelection.R')
write.csv(selectedFeatureNames, file = path_outMetric);
selectedFeatureNames
source('forwardFeatureSelection.R')
selectedFeatureNames
source('forwardFeatureSelection.R')
selectedFeatureNames
